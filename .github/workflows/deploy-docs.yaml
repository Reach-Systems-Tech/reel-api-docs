name: Deploy Documentation

on:
  # Triggered when docs are pushed from private repo
  repository_dispatch:
    types: [deploy-docs]

  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      docs_url:
        description: "URL to download docs from (optional for testing)"
        required: false
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download and extract documentation
        run: |
          echo "Starting documentation download and extraction..."

          # Create docs directory
          mkdir -p docs

          # Check if this was triggered by repository_dispatch
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            VERSION="${{ github.event.client_payload.version }}"
            DOWNLOAD_URL="${{ github.event.client_payload.download_url }}"
            
            echo "Repository dispatch detected"
            echo "Version: $VERSION"
            echo "Download URL: $DOWNLOAD_URL"
            
            if [ -n "$DOWNLOAD_URL" ]; then
              echo "Downloading docs from: $DOWNLOAD_URL"
              curl -L "$DOWNLOAD_URL" -o docs.tar.gz
              
              echo "Extracting docs..."
              tar -xzf docs.tar.gz -C docs
              
              echo "Files extracted:"
              find docs -type f | head -20
              
              # Verify index.html exists
              if [ -f "docs/index.html" ]; then
                echo "SUCCESS: index.html found"
              else
                echo "ERROR: index.html not found!"
                echo "Available files in docs:"
                ls -la docs/
                exit 1
              fi
            else
              echo "ERROR: No download URL provided in repository_dispatch payload"
              exit 1
            fi
            
          # Manual trigger with docs_url
          elif [ -n "${{ github.event.inputs.docs_url }}" ]; then
            echo "Manual trigger with docs URL"
            echo "Downloading docs from: ${{ github.event.inputs.docs_url }}"
            curl -L "${{ github.event.inputs.docs_url }}" -o docs.tar.gz
            tar -xzf docs.tar.gz -C docs
            
          # Fallback - create placeholder
          else
            echo "No docs source provided - creating placeholder"
            cat > docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><title>API Documentation</title></head>
          <body>
            <h1>API Documentation</h1>
            <p>Documentation will be deployed here automatically from the private repository.</p>
          </body>
          </html>
          EOF
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment summary
        run: |
          echo "Documentation deployed successfully!"
          echo "URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Repository: ${{ github.repository }}"
